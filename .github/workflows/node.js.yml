# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: ['RESTAPI', 'SDET']
        
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
    - name: Install dependencies
      run: |
        cd ${{ matrix.project }}
        npm ci
    - name: Build ${{ matrix.project }}
      run: |
        cd ${{ matrix.project }}
        npm run build
        
    # Run tests
    - name: Run tests for ${{ matrix.project }}
      run: |
        cd ${{ matrix.project }}
        npm test -- --coverage --ci --reporters=default --reporters=jest-junit
      env:
        JEST_JUNIT_OUTPUT_DIR: ./test-results
        JEST_JUNIT_OUTPUT_NAME: junit-${{ matrix.project }}.xml
      
    # Upload test results
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.project }}
        path: ${{ matrix.project }}/test-results/
  
  # Publish test results after all tests complete
  publish-results:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: always()
    
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v3
        with:
          path: all-test-results
      
      # Publish test results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            all-test-results/**/junit-*.xml
          comment_mode: off
      
      # Display test summary
      - name: Test Summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "All test results have been published" >> $GITHUB_STEP_SUMMARY
